name: Remove Specific Commit

on:
  workflow_dispatch:

jobs:
  rebase-remove-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout a shallow copy of the Compilable-testing branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 1  # Initially fetch the latest commit
          ref: Compilable-testing

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Find the commit to remove incrementally
        id: find_commit
        run: |
          max_depth=10  # Define the maximum depth to check
          commit_to_remove=""
          for depth in $(seq 2 $max_depth); do
            git fetch --depth=$depth origin Compilable-testing
            commit_to_remove=$(git log --pretty=format:"%H %s" | grep "Compile" | head -n 1 | awk '{print $1}')
            if [ ! -z "$commit_to_remove" ]; then
              echo "Commit to remove: $commit_to_remove"
              echo "commit=$commit_to_remove" >> $GITHUB_ENV
              exit 0
            fi
          done
          echo "No commit with 'Compile' found."
          echo "commit=none" >> $GITHUB_ENV

      - name: Checkout the full branch history if a commit is found
        if: env.commit != 'none'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for rebase
          ref: Compilable-testing

      - name: Rebase and remove the commit
        if: env.commit != 'none'
        run: |
          COMMIT_TO_REMOVE=${{ env.commit }}
          # Rebase and remove the specified commit
          git rebase --onto $COMMIT_TO_REMOVE^ $COMMIT_TO_REMOVE

      - name: Push changes
        if: env.commit != 'none'
        run: |
          git push origin Compilable-testing --force
